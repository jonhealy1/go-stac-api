basePath: /
definitions:
  models.Collection:
    properties:
      crs:
        items:
          type: string
        type: array
      description:
        type: string
      extent: {}
      id:
        type: string
      itemType:
        type: string
      keywords:
        items:
          type: string
        type: array
      license:
        type: string
      links:
        items:
          $ref: '#/definitions/models.Link'
        type: array
      providers:
        items: {}
        type: array
      stac_version:
        type: string
      summary: {}
      title:
        type: string
    type: object
  models.Context:
    properties:
      limit:
        type: integer
      returned:
        type: integer
    type: object
  models.Item:
    properties:
      assets: {}
      bbox:
        items:
          type: number
        type: array
      collection:
        type: string
      geometry: {}
      id:
        type: string
      links:
        items: {}
        type: array
      properties: {}
      stac_extensions:
        items:
          type: string
        type: array
      stac_version:
        type: string
      type:
        type: string
    type: object
  models.ItemCollection:
    properties:
      context:
        $ref: '#/definitions/models.Context'
      features:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      type:
        type: string
    type: object
  models.Link:
    properties:
      href:
        type: string
      rel:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  models.Search:
    properties:
      collections:
        items:
          type: string
        type: array
      ids:
        items:
          type: string
        type: array
      limit:
        type: integer
    type: object
host: localhost:6001
info:
  contact:
    email: jonathan.d.healy@gmail.com
    name: Jonathan Healy
  description: STAC api written in go with fiber and mongodb
  title: go-stac-api
  version: "0.0"
paths:
  /collections:
    get:
      consumes:
      - application/json
      description: Get all Collections
      operationId: get-all-collections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Collection'
            type: array
      summary: Get all Collections
      tags:
      - Collections
    post:
      consumes:
      - application/json
      description: Create a collection with a unique ID
      operationId: post-collection
      parameters:
      - description: STAC Collection json
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/models.Collection'
      produces:
      - application/json
      responses: {}
      summary: Create a STAC collection
      tags:
      - Collections
  /collections/{collectionId}:
    delete:
      consumes:
      - application/json
      description: Delete a collection by ID
      operationId: delete-collection-by-id
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a Collection
      tags:
      - Collections
    get:
      consumes:
      - application/json
      description: Get a collection by ID
      operationId: get-collection-by-id
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Collection'
      summary: Get a Collection
      tags:
      - Collections
    put:
      consumes:
      - application/json
      description: Edit a collection by ID
      operationId: edit-collection
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      - description: STAC Collection json
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/models.Collection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Collection'
      summary: Edit a Collection
      tags:
      - Collections
  /collections/{collectionId}/items:
    get:
      consumes:
      - application/json
      description: Get all Items with a Collection ID
      operationId: get-item-collection
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemCollection'
      summary: Get all Items from a Collection
      tags:
      - ItemCollection
    post:
      consumes:
      - application/json
      description: Create an item with an ID
      operationId: post-item
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      - description: STAC Item json
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses: {}
      summary: Create a STAC item
      tags:
      - Items
  /collections/{collectionId}/items/{itemId}:
    delete:
      consumes:
      - application/json
      description: Delete an Item by ID is a specified collection
      operationId: delete-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete an Item
      tags:
      - Items
    get:
      consumes:
      - application/json
      description: Get an item by its ID
      operationId: get-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
      summary: Get an item
      tags:
      - Items
    put:
      consumes:
      - application/json
      description: Edit a stac item by ID
      operationId: edit-item
      parameters:
      - description: Collection ID
        in: path
        name: collectionId
        required: true
        type: string
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: STAC Collection json
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
      summary: Edit an Item
      tags:
      - Collections
  /search:
    post:
      consumes:
      - application/json
      description: Search for STAC items via the Search endpoint
      operationId: post-search
      parameters:
      - description: Search body json
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/models.Search'
      produces:
      - application/json
      responses: {}
      summary: POST Search request
      tags:
      - Search
swagger: "2.0"
